# AppVeyor documentation https://www.appveyor.com/docs
platform:
  - Any CPU

configuration:
  - Release

assembly_info:
  patch: false

# Build script
version: '{build}'
image: Previous Visual Studio 2017
os: Previous Visual Studio 2017

# branches to build
branches:
  # whitelist
  only:
    - master
    - dev

clone_depth: 1
environment:
  global:
    # Set the DOTNET_SKIP_FIRST_TIME_EXPERIENCE environment variable to stop wasting time caching packages
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    # Disable sending usage data to Microsoft
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    
pull_requests:
  # Do not increment build number for pull requests
  do_not_increment_build_number: true
 
nuget:
  # Do not publish NuGet packages for pull requests
  disable_publish_on_pr: true

init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true

install:
  # .NET Core SDK binaries
  - ps: $urlCurrent = "https://download.microsoft.com/download/D/7/8/D788D3CD-44C4-487D-829B-413E914FB1C3/dotnet-sdk-2.1.300-preview1-008174-win-x64.zip"
  - ps: $env:DOTNET_INSTALL_DIR = "$pwd\.dotnetsdk"
  - ps: mkdir $env:DOTNET_INSTALL_DIR -Force | Out-Null
  - ps: $tempFileCurrent = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), [System.IO.Path]::GetRandomFileName())
  - ps: (New-Object System.Net.WebClient).DownloadFile($urlCurrent, $tempFileCurrent)
  - ps: Add-Type -AssemblyName System.IO.Compression.FileSystem; [System.IO.Compression.ZipFile]::ExtractToDirectory($tempFileCurrent, $env:DOTNET_INSTALL_DIR)
  - ps: $env:Path = "$env:DOTNET_INSTALL_DIR;$env:Path"

#---------------------------------#
#       build configuration       #
#---------------------------------#
before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  - choco install codecov
build_script:
  - ps: .\build.ps1 --verbosity=diagnostic
  - codecov -f .\artifacts\Coverage\coverage.xml -t $(CODECOV_TOKEN)

after_build:
  # For once the build has completed

on_finish :
  # any cleanup in here

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  - path: 'artifacts\Nugets\**\*.nupkg'
  - path: 'build\**\*.zip'

#---------------------------------#
#      deployment configuration   #
#---------------------------------#

deploy:
  - provider: GitHub
    auth_token:
      secure: xxx
    artifact: /.*\.zip/
    draft: true
    on:
      appveyor_repo_tag: true

  - provider: NuGet
    api_key: 
      secure: xxx
    on:
      appveyor_repo_tag: true

#---------------------------------#
#      cache configuration        #
#---------------------------------#

cache:
- tools -> build.cake
- packages -> build.cake