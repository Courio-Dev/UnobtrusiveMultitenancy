<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- Configure application settings in config.json. See http://go.microsoft.com/fwlink/?LinkId=786380 -->
  <system.web>
    <!-- customErrors - If your app errors before the Configure method in Startup.cs you will get a full detailed error
                        message using IIS Express but a generic 500 Internal Server Error on full IIS. To see the error
                        message on full IIS, uncomment the line below. Warning: This can leak sensitive information to
                        the outside world (See http://docs.asp.net/en/latest/fundamentals/diagnostics.html) -->
    <!--<customErrors mode="Off" />-->
  </system.web>
  <system.webServer>
    <handlers>
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModule" resourceType="Unspecified" />
    </handlers>
    <aspNetCore processPath="%LAUNCHER_PATH%" arguments="%LAUNCHER_ARGS%" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" forwardWindowsAuthToken="false" />

    <httpProtocol>
      <customHeaders>
        <!-- X-Powered-By - Remove the HTTP header for added security and a slight performance increase. -->
        <clear />
        <!-- Arr-Disable-Session-Affinity - Disable the Application Request Routing (AAR) IIS extension
                                            (See https://azure.microsoft.com/en-gb/blog/disabling-arrs-instance-affinity-in-windows-azure-web-sites/). -->
        <add name="Arr-Disable-Session-Affinity" value="true" />
      </customHeaders>
    </httpProtocol>
    <security>
      <!-- Enable Dynamic IP Security. During a Denial of Service (DoS) attack, a very simple and small 403.501 or 403.502 Forbidden static error page is displayed.
           See http://www.iis.net/configreference/system.webserver/security/dynamicipsecurity -->
      <!-- enableLoggingOnlyMode - Specifies that IIS will log requests from the client that would be rejected without actually rejecting them.
                                   After running your site for a while, and searching the IIS logs for 403.501 and 403.502 errors, set sensible limits below.
                                   Note: Google and Bing make large numbers of requests at times and can look like a DoS attack. -->
      <!-- enableProxyMode - Set this to true if you are behind a proxy. -->
      <dynamicIpSecurity enableLoggingOnlyMode="true">
        <!-- maxConcurrentRequests - The number of concurrent HTTP connection requests from a client that will result in the client being blocked. -->
        <denyByConcurrentRequests enabled="true" maxConcurrentRequests="20" />
        <!-- maxRequests - The number of requests received from a specific client over a specified period of time that will result in the client being blocked (if the check is enabled). -->
        <!-- requestIntervalInMilliseconds - The period of time (in milliseconds) that is used to determine the request rate for a specific client. This rate is used to determine whether the receive rate exceeds that the maximum specified, resulting in the client being blocked (if the check is enabled). -->
        <denyByRequestRate enabled="true" maxRequests="30" requestIntervalInMilliseconds="300" />
      </dynamicIpSecurity>
      <requestFiltering>
        <!-- maxAllowedContentLength - Specifies the maximum length of content in a request, in bytes. The default value is 30000000 (~28.6 MB) and has
                                       been reduced to 1048576 (1 MB). This setting is for IIS while the httpRuntime maxRequestLength setting is
                                       for ASP.NET, you need to set both to the same value or the smaller number wins (See http://stackoverflow.com/questions/6327452/which-gets-priority-maxrequestlength-or-maxallowedcontentlength). -->
        <!-- maxQueryString - Specifies the maximum length of the query string, in bytes. The default value is 2048. This setting is for IIS while the
                              httpRuntime maxQueryStringLength setting is for ASP.NET, you need to set both to the same value. -->
        <!-- maxUrl - Specifies maximum length of the URL, in bytes. The default value is 4096. This setting is for IIS while the
                      httpRuntime maxUrlLength setting is for ASP.NET, you need to set both to the same value. -->
        <requestLimits maxAllowedContentLength="1048576" maxQueryString="2048" maxUrl="4096" />
      </requestFiltering>
    </security>
  </system.webServer>
</configuration>